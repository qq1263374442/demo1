{"version":3,"sources":["component/EditableTable.js","component/CollectionsPage.js","App.js","index.js"],"names":["EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","name","style","margin","rules","required","message","EditableTable","Form","useForm","form","useState","data","setData","editingKey","setEditingKey","React","useEffect","axios","post","then","res","newdata","response","map","item","key","prize_id","token","PubSub","subscribe","msg","id","nanoid","newData","unsubscribe","isEditing","cancel","save","a","validateFields","row","findIndex","splice","console","log","mergedColumns","width","editable","render","_","checked","isprize","onChange","changeCheck","type","onClick","marginRight","disabled","setFieldsValue","prize_name","prize_probability","prize_amount","edit","cut","marginLeft","col","onCell","component","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","CollectionCreateForm","visible","onCreate","onCancel","okText","cancelText","onOk","values","resetFields","catch","info","layout","initialValues","modifier","label","valuePropName","initialValue","defaultChecked","CollectionsPage","setVisible","publish","App","textAlign","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c254fec8.chunk.js","sourcesContent":["import React, {\r\n    useState\r\n} from 'react';\r\nimport {\r\n    Table,\r\n    Input,\r\n    InputNumber,\r\n    Form,\r\n    Button,\r\n    Switch\r\n} from 'antd';\r\nimport PubSub from 'pubsub-js';\r\nimport axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\n\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? < InputNumber / > : < Input / > ;\r\n    return ( <\r\n        td {\r\n            ...restProps\r\n        } > {\r\n            editing ? ( <\r\n                Form.Item name = {\r\n                    dataIndex\r\n                }\r\n                style = {\r\n                    {\r\n                        margin: 0,\r\n                    }\r\n                }\r\n                rules = {\r\n                    [{\r\n                        required: true,\r\n                        message: `Please Input ${title}!`,\r\n                    }, ]\r\n                } >\r\n                {\r\n                    inputNode\r\n                } \r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )\r\n        } \r\n        </td>\r\n    );\r\n};\r\n\r\nconst EditableTable = () => {\r\n    // 创建表单实例form\r\n    const [form] = Form.useForm();\r\n    //data---展示数据的状态\r\n    const [data, setData] = useState();\r\n    //editingKey---正在编辑行的id\r\n    const [editingKey, setEditingKey] = useState('');\r\n    \r\n    //从后台获取展示信息,添加key:prize_id\r\n    React.useEffect(()=>{\r\n        axios.post('https://qc1hz1.fn.thelarkcloud.com/prizeinfo')\r\n        .then(function (res) {\r\n           let newdata=res.data.response;\r\n           newdata=newdata.map((item)=>{return {...item,key:item.prize_id}})\r\n           setData(newdata);\r\n        });\r\n        return ()=>{};\r\n    },[])// eslint-disable-line\r\n\r\n    // 订阅新增奖品信息\r\n    React.useEffect(()=>{\r\n        // 订阅CollectionPage下的消息\r\n        const token=PubSub.subscribe('AddPrize',(msg,item)=>{\r\n            //生成唯一id\r\n            const id=nanoid();\r\n            // const newData=data?[...data,{prize_id:id,...item,key:id}]\r\n            // :[{prize_id:id,...item,key:id}];\r\n            const newData=[...data,{prize_id:id,...item,key:id}];\r\n            // 更新展示数据的state\r\n            setData(newData);\r\n            // 向后台发送新增奖品数据\r\n            axios.post('https://qc1hz1.fn.thelarkcloud.com/addPrize',{prize_id:id,...item})\r\n        });\r\n        // 取消订阅\r\n        return ()=>{PubSub.unsubscribe(token)};\r\n    },[data])// eslint-disable-line\r\n    // 将函数的声明放在useEffect函数外面时\r\n    // 或者使用useState定义的历史变量,会报eslint警告\r\n    // 解决办法\r\n    // 1.在useEffect后面加个eslint注释,忽略掉\r\n    // 2.如果是函数,将函数放在useEffect内部,如果是变量,\r\n    //用deepcopy拷贝useSet定义的变量或者采用useRef\r\n    \r\n    \r\n    // 是否在编辑\r\n    const isEditing = (record) => record.prize_id === editingKey;\r\n    // 点击修改按钮后触发\r\n    const edit = (record) => {\r\n        //输入框内保留先前值\r\n        form.setFieldsValue({\r\n            prize_name: '',\r\n            prize_probability: '',\r\n            prize_amount: '',\r\n            isprize:true,\r\n            ...record,\r\n        });\r\n        //记录正在编辑的行的id\r\n        setEditingKey(record.prize_id);\r\n    };\r\n    \r\n    //清除正在编辑行的标记\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n    //删除一个奖品\r\n    const cut=(record)=>{\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => record.prize_id === item.prize_id);\r\n        newData.splice(index, 1);\r\n        setData(newData);\r\n        //setEditingKey('');\r\n        // 向后台发送要删除奖品的id\r\n        axios.post('https://qc1hz1.fn.thelarkcloud.com/deletePrize',{id:record.prize_id}) \r\n    }\r\n    \r\n    //保存修改的数据\r\n    const save = async (key) => {\r\n        try {\r\n            // row新数据\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key ===item.prize_id);\r\n\r\n            // item旧数据，row新数据\r\n            const item = newData[index];\r\n            // 让新数据覆盖旧数据\r\n            newData.splice(index, 1, {\r\n                ...item,\r\n                ...row\r\n            });\r\n            setData(newData);\r\n            setEditingKey('');\r\n            //让后台保存新数据\r\n            axios.post('https://qc1hz1.fn.thelarkcloud.com/changePrize',newData[index])\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    // isprize值更新\r\n    const changeCheck=(record)=>{\r\n        const newData = [...data];\r\n        const index = newData.findIndex((item) => record.prize_id === item.prize_id);\r\n        newData[index].isprize=!newData[index].isprize;\r\n        setData(newData);\r\n        setEditingKey('');\r\n        // 让后台更新isprize的值\r\n        save(record.prize_id);\r\n    }\r\n\r\n    const columns = [{\r\n            title: 'prize_name',\r\n            dataIndex: 'prize_name',\r\n            width: '20%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'prize_probability',\r\n            dataIndex: 'prize_probability',\r\n            width: '20%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'prize_amount',\r\n            dataIndex: 'prize_amount',\r\n            width: '20%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'isprize',\r\n            dataIndex: 'isprize',\r\n            width: '5%',\r\n            editable: false,\r\n            render:(_,record)=>{\r\n                return <Switch checked={record.isprize} onChange={(checked)=>{\r\n                    changeCheck(record)\r\n                }}></Switch>\r\n                \r\n            }\r\n        },\r\n        {\r\n            title: 'operation',\r\n            dataIndex: 'operation',\r\n            // record---一行的数据\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                // 编辑行\r\n                return editable ? (\r\n                    <span >                  \r\n                    <Button type=\"link\" \r\n                    onClick={()=>{save(record.prize_id)}}\r\n                    style = {{marginRight: 8,}}\r\n                    >保存</Button>\r\n\r\n                    <Button type=\"link\" onClick={cancel}>取消</Button>\r\n                    </span>\r\n                ) \r\n                //非编辑行返回修改、删除按钮 \r\n                //编辑时其他非编辑行不可选取\r\n                : ( \r\n\r\n                    <div>\r\n                    <Button disabled={editingKey !== ''} type=\"primary\" onClick={()=>edit(record)} >\r\n                        修改\r\n                    </Button>\r\n                    <Button type=\"danger\" onClick={()=>cut(record)} style={{marginLeft: 8}}>\r\n                        删除\r\n                    </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n\r\n    return ( <\r\n        Form form = {\r\n            form\r\n        }\r\n        component = {\r\n            false\r\n        } >\r\n        <\r\n        Table components = {\r\n            {\r\n                body: {\r\n                    cell: EditableCell,\r\n                },\r\n            }\r\n        }\r\n        bordered dataSource = {\r\n            data\r\n        }\r\n        columns = {\r\n            mergedColumns\r\n        }\r\n        rowClassName = \"editable-row\"\r\n        pagination = {false}\r\n        />\r\n        </Form>\r\n        \r\n    );\r\n};\r\nexport default EditableTable;","import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Input,Switch } from 'antd';\r\nimport PubSub from 'pubsub-js';\r\n\r\nconst CollectionCreateForm = ({ visible, onCreate, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"添加一个奖品\"\r\n      okText=\"确定\"\r\n      cancelText=\"取消\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then((values) => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch((info) => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        name=\"form_in_modal\"\r\n        initialValues={{\r\n          modifier: 'public',\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"prize_name\"\r\n          label=\"Prize_name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input the title of collection!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"prize_probability\" label=\"Prize_probability\">\r\n          <Input type=\"textarea\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"prize_amount\" label=\"Prize_amount\">\r\n          <Input type=\"textarea\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"isprize\" label=\"isprize\" valuePropName=\"checked\" initialValue={true} >\r\n          <Switch  defaultChecked></Switch>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CollectionsPage = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  // 发布消息--修改行的数据\r\n  const onCreate = (values) => {\r\n    PubSub.publish('AddPrize',values);\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        添加\r\n      </Button  >\r\n      <CollectionCreateForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default CollectionsPage;","import 'antd/dist/antd.css'\nimport EditableTable from './component/EditableTable'\nimport CollectionsPage from './component/CollectionsPage'\n// import { div } from 'prelude-ls';\nfunction App() {\n  return (\n      <div style={{textAlign:'center',width:\"70%\",margin:\"0 auto\"}} >\n        {/* 数据展示、修改按钮、删除按钮--antd---Table表格---可编辑行 */}\n        <EditableTable ></EditableTable>\n        {/* 添加按钮--antd---form表单---弹出层中的新建表单 */}\n        <CollectionsPage />\n      </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}